import { PrismaClient } from '../src/generated/prisma';

const prisma = new PrismaClient();

async function enableForeignKeysAndCreateIndexes() {
  try {
    console.log('üîß Habilitando claves for√°neas en SQLite...');
    
    // Habilitar claves for√°neas en SQLite
    await prisma.$executeRaw`PRAGMA foreign_keys = ON;`;
    
    console.log('‚úÖ Claves for√°neas habilitadas');

    // Crear √≠ndices para mejorar las relaciones
    console.log('üìä Creando √≠ndices para relaciones...');
    
    try {
      await prisma.$executeRaw`CREATE INDEX IF NOT EXISTS idx_activitylog_userid ON ActivityLog(userId);`;
      console.log('‚úÖ √çndice creado para ActivityLog.userId');
    } catch (e) {
      console.log('‚ÑπÔ∏è √çndice ActivityLog.userId ya existe');
    }

    try {
      await prisma.$executeRaw`CREATE INDEX IF NOT EXISTS idx_sale_userid ON Sale(userId);`;
      console.log('‚úÖ √çndice creado para Sale.userId');
    } catch (e) {
      console.log('‚ÑπÔ∏è √çndice Sale.userId ya existe');
    }

    try {
      await prisma.$executeRaw`CREATE INDEX IF NOT EXISTS idx_activitylog_productid ON ActivityLog(productId);`;
      console.log('‚úÖ √çndice creado para ActivityLog.productId');
    } catch (e) {
      console.log('‚ÑπÔ∏è √çndice ActivityLog.productId ya existe');
    }

    // Verificar que las claves for√°neas est√©n funcionando
    console.log('\nüîç Verificando claves for√°neas...');
    
    const foreignKeyCheck = await prisma.$queryRaw`PRAGMA foreign_key_check;`;
    
    if (Array.isArray(foreignKeyCheck) && foreignKeyCheck.length === 0) {
      console.log('‚úÖ Todas las claves for√°neas est√°n correctas');
    } else {
      console.log('‚ö†Ô∏è Problemas encontrados en claves for√°neas:', foreignKeyCheck);
    }

    // Mostrar informaci√≥n de las tablas relacionadas
    console.log('\nüìã Informaci√≥n de relaciones:');
    
    const activityLogInfo = await prisma.$queryRaw`
      SELECT sql FROM sqlite_master WHERE type='table' AND name='ActivityLog';
    `;
    console.log('ActivityLog DDL:', activityLogInfo);

    const saleInfo = await prisma.$queryRaw`
      SELECT sql FROM sqlite_master WHERE type='table' AND name='Sale';
    `;
    console.log('Sale DDL:', saleInfo);

    console.log('\n‚úÖ Configuraci√≥n completada. Ahora tu visor SQL deber√≠a mostrar las relaciones correctamente.');
    console.log('\nüí° Sugerencias para tu visor SQL:');
    console.log('   - Actualiza/recarga la vista de la base de datos');
    console.log('   - Busca una opci√≥n "Show Foreign Keys" o "Show Relationships"');
    console.log('   - En algunos visores, las relaciones aparecen en un diagrama separado');

  } catch (error) {
    console.error('‚ùå Error:', error);
  } finally {
    await prisma.$disconnect();
  }
}

enableForeignKeysAndCreateIndexes();
